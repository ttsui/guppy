#!/usr/bin/python
#
# Copyright (C) 2005 by Async Open Source 
# Copyright (C) 2005-2009 by Tony Tsui <tsui.tony@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; if not, write to the Free Software
## Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

import os
import sys

# Required version of Python
REQUIRED_VERSION = (2, 3)

# Directory name, defaults to name of binary, it is relative to ..
# a, __init__.py and main.py is expected to be found there.
DIRNAME = None

# Application name, defaults to capitalized name of binary
APPNAME = None

# Do not modify code below this point
dirname = DIRNAME or os.path.split(sys.argv[0])[1]
appname = APPNAME or dirname.capitalize()

version_string = sys.version.split(' ')[0]
majmin = tuple(map(int, version_string.split('.')[0:2]))
if majmin < REQUIRED_VERSION:
	raise SystemExit("ERROR: Python %s or higher is required to run %s, "
	                 "%s found" % ('.'.join(map(str, REQUIRED_VERSION)),
	                               appname,
	                               version_string))

# Figure out the directy which is the prefix
# path-of-current-file/..
currentdir = os.path.dirname(os.path.abspath(sys.argv[0]))
basedir = os.path.abspath(os.path.join(currentdir, '..'))

# Add the base directory where the application is installed in to sys.path
if os.path.exists(os.path.join(basedir, 'lib')):
	datadir = os.path.join(basedir, 'share', dirname)
	if not os.path.exists(datadir):
		raise SystemExit("ERROR: Could not find required directory: %s" %
	                    datadir)
	                    
	langdir = os.path.join(basedir, 'share/locale')
	if not os.path.exists(langdir):
		raise SystemExit("ERROR: Could not find required directory: %s" %
	                    langdir)
elif not os.path.exists(os.path.join(basedir, dirname)):
	raise SystemExit("ERROR: Could not find required directory: %s" %
	                 os.path.join(basedir, dirname))
else:
	datadir = os.path.join(basedir, dirname)
	langdir = os.path.join(basedir, 'locale')
	

import locale
import gettext
import gtk

from guppy import GuppyWindow

if __name__ == "__main__":
	try:
		locale.setlocale(locale.LC_ALL, '')
	except locale.Error:
		pass
	gtk.glade.bindtextdomain(dirname, langdir)
	gtk.glade.textdomain(dirname)
	gettext.install(dirname, langdir, unicode=1)
	
	guppy = GuppyWindow.GuppyWindow(datadir + '/', dirname)
	guppy.run()
